  1 #include <stdio.h>
  2 #include <stdlib.h>
  3 #include <string.h>
  4 #include <unistd.h>
  5 #include <netinet/in.h>
  6 #include <sys/types.h>
  7 #include <sys/socket.h>
  8 #include <arpa/inet.h>
  9 #include <pthread.h>
 10 #define port 12000
 11 void *control(void*);
 12 int c[10];
 13 int i=0;
 14 int main(){
 15     int s_socket,c_socket,m_socket;
 16     struct sockaddr_in s_addr,c_addr;
 17     struct in_addr inp;
 18     int len;
 19
 20     pthread_t p1;
 21     int thr_c;
 22 //  pid_t pid;
 23
 24     int n;
 25
 26     s_socket = socket(PF_INET,SOCK_STREAM,0);
 27
 28     memset(&s_addr,0,sizeof(s_addr));
 29     s_addr.sin_family=AF_INET;
 30     s_addr.sin_addr.s_addr=htonl(INADDR_ANY);
 31     s_addr.sin_port=htons(port);
 32
 33     if(bind(s_socket,(struct sockaddr*)&s_addr,sizeof(s_addr))==-1){
 34         printf("CAn nor bind\n");
 35         return -1;
 36     }
 37     if(listen(s_socket,10)==-1){
 38         printf("Listen FAil\n");
 39         return -1;
 40     }
 41     printf("연결전\n");
 42
 43     while(1){
 44         len=sizeof(c_addr);
 45
 46         c_socket=accept(s_socket,(struct sockaddr*)&c_addr, &len);
 47
 48         c[i++]=c_socket;
 49
 50         printf("클라이언트 접속, 접속자수 :%d\n",i);
 51
 52     //  pid=fork();
 53
 54     //  if(pid==0){
 55     //      close(s_socket);
 56
 57             thr_c=pthread_create(&p1,NULL,control,(void*)&c_socket);
 58             pthread_detach(p1);
 59
 60             if(i==0){
 61                 printf("클라이언트 모두 퇴장 서버 종료\n");
 62                 break;
 63             }
 64     //      close(c_socket);
 65     //      return 0;
 66     //  }
 67     //  else
 68     //      close(c_socket);
 69     }
 70     close(s_socket);
 71 }
 72 void *control(void* c_s){
 73     char rcvBuffer[BUFSIZ];
 74     int a=*(int*)c_s;
 75     int n;
 76
 77     while((n=read(a,rcvBuffer,sizeof(rcvBuffer)))!=0){
 78         rcvBuffer[n]='\0';
 79         printf("%s",rcvBuffer);
 80
 81         for(int j=0;j<i;j++){
 82             write(c[j],rcvBuffer,sizeof(rcvBuffer));
 83         }
 84         if(!strcmp(rcvBuffer,"quit\n"))
 85             break;
 86     }
 87     for(int j=0;j<i-1;j++){
 88         if(a==c[j]){
 89             while(j++<i-1)
 90                 c[j]=c[j+1];
 91             break;
 92         }
 93     }
 94     i--;
 95     printf("클라이언트퇴장, 남은 클라이언트 : %d\n",i);
 96     close(a);
 97 }
                                     

